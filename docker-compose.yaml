version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    restart: unless-stopped
    environment:
      POSTGRES_DB: algoriddledb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d algoriddledb -U admin"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s

  springbootapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springboot_container
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_HIKARI_CONNECTIONTIMEOUT: ${SPRING_DATASOURCE_HIKARI_CONNECTIONTIMEOUT}
      SPRING_DATASOURCE_HIKARI_MAXIMUMPOOLSIZE: ${SPRING_DATASOURCE_HIKARI_MAXIMUMPOOLSIZE}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_JMS_SERVICEBUS_CONNECTION_STRING: ${SPRING_JMS_SERVICEBUS_CONNECTION_STRING}
      SPRING_JMS_SERVICEBUS_PRICING_TIER: ${SPRING_JMS_SERVICEBUS_PRICING_TIER}
      SPRING_JMS_LISTENER_RECEIVE_TIMEOUT: ${SPRING_JMS_LISTENER_RECEIVE_TIMEOUT}
      FIREBASE_CONFIG_JSON: ${FIREBASE_CONFIG_JSON}
